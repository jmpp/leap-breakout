{"version":3,"sources":["scripts/leapInput.js","scripts/index.js"],"names":["LeapInput","position","x","y","connected","controller","Leap","Controller","onDeviceStreaming","console","log","onDeviceDisconnected","onFrame","frame","hand","hands","palm","get2dCoords","stabilizedPalmPosition","leapPosition","interactionBox","normalizedPoint","normalizePoint","window","innerWidth","innerHeight","on","connect","ball","pad","bricksGroup","timerText","game","Phaser","Game","AUTO","preload","create","update","render","timer","sounds","scale","scaleMode","ScaleManager","SHOW_ALL","load","image","require","audio","physics","startSystem","Physics","ARCADE","add","physicsGroup","sprite","Sprite","world","width","forEach","item","body","immovable","height","anchor","set","arcade","enable","collideWorldBounds","velocity","bounce","checkCollision","down","checkWorldBounds","events","onOutOfBounds","alert","location","reload","text","centerX","centerY","font","fill","setInterval","padBounce","brickBounce","collide","ballHitBrick","ballHitPad","input","setText","toFixed","brick","kill","play","children","reduce","total","alive"],"mappings":"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","file":"scripts.1e2798d9.js","sourceRoot":"..","sourcesContent":["const LeapInput = {\r\n    position  : { x : 0, y : 0 },\r\n    connected : false,\r\n};\r\n\r\nconst controller = new Leap.Controller();\r\n\r\ncontroller.on('deviceStreaming', onDeviceStreaming);\r\ncontroller.on('deviceDisconnected', onDeviceDisconnected);\r\ncontroller.on('frame', onFrame);\r\n\r\ncontroller.connect();\r\n\r\n\r\nfunction onDeviceStreaming() {\r\n    LeapInput.connected = true;\r\n    console.log('✅ Leap Motion is streaming!');\r\n}\r\n\r\nfunction onDeviceDisconnected() {\r\n    LeapInput.connected = false;\r\n    console.log('❌ Leap Motion is disconnected!');\r\n}\r\n\r\nfunction onFrame(frame) {\r\n    // Because the event \"onDeviceStreaming\" seems to be buggy sometimes\r\n    LeapInput.connected = true;\r\n\r\n    let hand = frame.hands[0];\r\n    if (!hand) return;\r\n\r\n    const palm = get2dCoords(hand.stabilizedPalmPosition, frame);\r\n    LeapInput.position.x = palm.x;\r\n    LeapInput.position.y = palm.y;\r\n}\r\n\r\n/**\r\n * Transforme les coordonnées 3D récupérée par le Leap en coordonnées 2D pour un <canvas> web\r\n * @param {Array} leapPosition Tableau de coordonnées 3D [x, y, z]\r\n * @param {Object} frame Objet \"frame\" transmit par le Leap Motion\r\n */\r\nfunction get2dCoords(leapPosition, frame) {\r\n    const interactionBox  = frame.interactionBox;\r\n    const normalizedPoint = interactionBox.normalizePoint(leapPosition, true);\r\n\r\n    return {\r\n        x : normalizedPoint[0] * window.innerWidth,\r\n        y : (1 - normalizedPoint[1]) * window.innerHeight,\r\n    }\r\n}\r\n","import LeapInput from './leapInput'\r\n\r\nconst game = new Phaser.Game(\r\n    window.innerWidth,\r\n    window.innerHeight,\r\n    Phaser.AUTO,\r\n    'game-root',\r\n    {\r\n        preload: preload,\r\n        create: create,\r\n        update: update,\r\n        render: render\r\n    }\r\n);\r\n\r\nlet ball;\r\nlet pad;\r\nlet bricksGroup;\r\nlet timerText, timer = 0;\r\nlet sounds = {};\r\n\r\nfunction preload() {\r\n    game.scale.scaleMode = Phaser.ScaleManager.SHOW_ALL;\r\n    // game.scale.pageAlignHorizontally = true;\r\n    // game.scale.pageAlignVertically = true;\r\n    // game.stage.backgroundColor = '#eee';\r\n\r\n    game.load.image('ball', require('../images/ball.png'));\r\n    game.load.image('pad', require('../images/pad.png'));\r\n    game.load.image('brick_1', require('../images/01.png'), 100, 33);\r\n    game.load.image('brick_2', require('../images/02.png'), 100, 33);\r\n    game.load.image('brick_3', require('../images/03.png'), 100, 33);\r\n    game.load.image('brick_4', require('../images/04.png'), 100, 33);\r\n    game.load.image('brick_5', require('../images/05.png'), 100, 33);\r\n    game.load.image('brick_6', require('../images/06.png'), 100, 33);\r\n    game.load.image('brick_7', require('../images/07.png'), 100, 33);\r\n    game.load.image('brick_8', require('../images/08.png'), 100, 33);\r\n    game.load.image('brick_9', require('../images/09.png'), 100, 33);\r\n    game.load.image('brick_10', require('../images/10.png'), 100, 33);\r\n    game.load.audio('pad-bounce', [require('../sounds/pad-bounce.mp3')]);\r\n    game.load.audio('brick-bounce', [require('../sounds/brick-bounce.mp3')]);\r\n}\r\n\r\nfunction create() {\r\n    game.physics.startSystem(Phaser.Physics.ARCADE);\r\n\r\n    // Création du groupe de briques\r\n    bricksGroup = game.add.physicsGroup();\r\n    // Génération des briques\r\n    for (let y = 0; y < 5; y++) {\r\n        for (let x = 0; x < 10; x++) {\r\n            let sprite = new Phaser.Sprite(game, x * 100 + (game.world.width - 1000) / 2, 100 + y * 33, 'brick_' + (x % 10 + 1));\r\n            bricksGroup.add(sprite);\r\n        }\r\n    }\r\n    bricksGroup.forEach(item => {\r\n        item.body.immovable = true;\r\n    });\r\n\r\n    // Création de la balle\r\n    ball = game.add.sprite(game.world.width / 2, game.world.height - 100, 'ball');\r\n    ball.anchor.set(0.5);\r\n    game.physics.arcade.enable(ball);\r\n    ball.body.collideWorldBounds = true;\r\n    ball.body.velocity.set(400, -400);\r\n    ball.body.bounce.set(1);\r\n    \r\n    // Création du pad\r\n    pad = game.add.sprite(game.world.width / 2, game.world.height - 5, 'pad');\r\n    pad.anchor.set(0.5, 1);\r\n    game.physics.arcade.enable(pad);\r\n    pad.body.immovable = true;\r\n\r\n    // La balle peut sortir en bas de l'écran\r\n    game.physics.arcade.checkCollision.down = false;\r\n    ball.checkWorldBounds = true;\r\n    ball.events.onOutOfBounds.add(function(){\r\n        window.alert('Game over!');\r\n        window.location.reload();\r\n    }, this);\r\n\r\n    // Timing\r\n    timerText = game.add.text(game.world.centerX, game.world.centerY, '0.0s', { font: '148px Arial', fill: 'rgba(255, 255, 255, 0.3)' });\r\n    timerText.anchor.set(0.5, 0.5);\r\n    setInterval(() => timer += 100, 100);\r\n\r\n    // Sounds\r\n    sounds.padBounce = game.add.audio('pad-bounce');\r\n    sounds.brickBounce = game.add.audio('brick-bounce');\r\n}\r\n\r\nfunction update() {\r\n    game.physics.arcade.collide(ball, bricksGroup, ballHitBrick);\r\n    game.physics.arcade.collide(ball, pad, ballHitPad);\r\n\r\n    if (LeapInput.connected) {\r\n        pad.x = LeapInput.position.x;\r\n    } else {\r\n        pad.x = game.input.x || game.world.width * 0.5;\r\n    }\r\n\r\n    timerText.setText((timer / 1000).toFixed(1) + 's');\r\n}\r\n\r\nfunction render() {\r\n\r\n}\r\n\r\nfunction ballHitBrick(ball, brick) {\r\n    brick.kill();\r\n    sounds.brickBounce.play();\r\n\r\n    // Augmentation de la vitesse de la balle\r\n    ball.body.velocity.y = (ball.body.velocity.y > 0) ? ball.body.velocity.y + 10 : ball.body.velocity.y - 10;\r\n\r\n    const remainingBalls = bricksGroup.children.reduce((total, brick) => brick.alive ? total + 1 : total, 0);\r\n    if (remainingBalls === 0) {\r\n        window.alert('Bravo!\\nVous avez complété le jeu en '+ (timer / 1000).toFixed(1) +' secondes !');\r\n        window.location.reload();\r\n    }\r\n}\r\n\r\nfunction ballHitPad(ball, pad) {\r\n    sounds.padBounce.play();\r\n    ball.body.velocity.x = -1 * 5 * (pad.x - ball.x) * 1.5;\r\n}"]}